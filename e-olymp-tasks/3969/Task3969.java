import java.io.PrintWriter;
import java.util.Scanner;

/**
 * Дипломы
 * prb3969 Когда Петя учился в школе, он часто участвовал в олимпиадах по информатике, математике и физике. Так как он был достаточно способным мальчиком и усердно учился, то на многих из этих олимпиад он
 * получал дипломы. К окончанию школы у него накопилось n дипломов, причём, как оказалось, все они имели одинаковые размеры: w - в ширину и h - в высоту.
 * Сейчас Петя учится в одном из лучших университетов и живёт в общежитии со своими одногруппниками. Он решил украсить свою комнату, повесив на одну из стен свои дипломы за школьные олимпиады. Так как к
 * бетонной стене прикрепить дипломы дсотаточно трудно, он решил купить специальную доску из пробкового дерева, чтобы прикрепить её к стене, а к ней - дипломы. Для того, чтобы эта конструкция выглядела
 * более красиво, Петя хочет, чтобы была квадратной и занимала как можно меньше места на стене. Каждый диплом должен быть размещён строго в прямоугольнике w на h. дипломы запрещается поворачивать на 90
 * градусов. Прямоугольники, соответствующие различным дипломам, не должны иметь общих внутренних точек.
 * Требуется написать программу, которая вычислит минимальный размер стороны доски, которая потребуется Пете для размещения всех своих дипломов.
 *
 * Входные данные
 * Входной файл содержит три целых числа w, h, n (1≤w, h, n ≤ 109).
 *
 * Выходные данные
 * В выходной файл вывести ответ на поставленную задачу.
 */
public class Task3969 {
    private static long binarySearch(long width, long height, long number) {
        long left = 0;
        long right = Math.max(width, height) * number;

        while (left < right - 1) {
            long t = (left + right) / 2;
            long sq = (t / width) * (t / height);

            if (sq >= number) {
                right = t;
            } else {
                left = t;
            }
        }

        return right;
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);

        long width = in.nextInt();
        long height = in.nextInt();
        long number = in.nextInt();

        out.println(binarySearch(width, height, number));
        out.flush();
    }
}